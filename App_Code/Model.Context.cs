//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Entity.Core.Objects;
using System.Linq;

public partial class RMSC1Entities1 : DbContext
{
    public RMSC1Entities1()
        : base("name=RMSC1Entities1")
    {
    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }

    public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
    public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
    public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
    public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
    public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
    public virtual DbSet<BILL> BILLs { get; set; }
    public virtual DbSet<CART> CARTs { get; set; }
    public virtual DbSet<CATEGORY> CATEGORies { get; set; }
    public virtual DbSet<CLIENT> CLIENTs { get; set; }
    public virtual DbSet<forgotpassword_client> forgotpassword_client { get; set; }
    public virtual DbSet<imageupload> imageuploads { get; set; }
    public virtual DbSet<ORDER> ORDERS { get; set; }
    public virtual DbSet<RAWMATERIAL> RAWMATERIALs { get; set; }
    public virtual DbSet<VENDOR> VENDORs { get; set; }

    public virtual int addcategory(string name, byte[] cimage, ObjectParameter newid)
    {
        var nameParameter = name != null ?
            new ObjectParameter("name", name) :
            new ObjectParameter("name", typeof(string));

        var cimageParameter = cimage != null ?
            new ObjectParameter("cimage", cimage) :
            new ObjectParameter("cimage", typeof(byte[]));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addcategory", nameParameter, cimageParameter, newid);
    }

    public virtual int addrawmaterial(string name, ObjectParameter rawid, Nullable<int> catagoryid, byte[] rimage1, byte[] rimage2, byte[] rimage3, string description, Nullable<int> r_NeedQuantity, Nullable<int> price, Nullable<int> r_QuantityInStock, string r_MinOrder, string r_imageid1, Nullable<int> vendorid)
    {
        var nameParameter = name != null ?
            new ObjectParameter("name", name) :
            new ObjectParameter("name", typeof(string));

        var catagoryidParameter = catagoryid.HasValue ?
            new ObjectParameter("catagoryid", catagoryid) :
            new ObjectParameter("catagoryid", typeof(int));

        var rimage1Parameter = rimage1 != null ?
            new ObjectParameter("rimage1", rimage1) :
            new ObjectParameter("rimage1", typeof(byte[]));

        var rimage2Parameter = rimage2 != null ?
            new ObjectParameter("rimage2", rimage2) :
            new ObjectParameter("rimage2", typeof(byte[]));

        var rimage3Parameter = rimage3 != null ?
            new ObjectParameter("rimage3", rimage3) :
            new ObjectParameter("rimage3", typeof(byte[]));

        var descriptionParameter = description != null ?
            new ObjectParameter("description", description) :
            new ObjectParameter("description", typeof(string));

        var r_NeedQuantityParameter = r_NeedQuantity.HasValue ?
            new ObjectParameter("r_NeedQuantity", r_NeedQuantity) :
            new ObjectParameter("r_NeedQuantity", typeof(int));

        var priceParameter = price.HasValue ?
            new ObjectParameter("price", price) :
            new ObjectParameter("price", typeof(int));

        var r_QuantityInStockParameter = r_QuantityInStock.HasValue ?
            new ObjectParameter("r_QuantityInStock", r_QuantityInStock) :
            new ObjectParameter("r_QuantityInStock", typeof(int));

        var r_MinOrderParameter = r_MinOrder != null ?
            new ObjectParameter("r_MinOrder", r_MinOrder) :
            new ObjectParameter("r_MinOrder", typeof(string));

        var r_imageid1Parameter = r_imageid1 != null ?
            new ObjectParameter("r_imageid1", r_imageid1) :
            new ObjectParameter("r_imageid1", typeof(string));

        var vendoridParameter = vendorid.HasValue ?
            new ObjectParameter("vendorid", vendorid) :
            new ObjectParameter("vendorid", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addrawmaterial", nameParameter, rawid, catagoryidParameter, rimage1Parameter, rimage2Parameter, rimage3Parameter, descriptionParameter, r_NeedQuantityParameter, priceParameter, r_QuantityInStockParameter, r_MinOrderParameter, r_imageid1Parameter, vendoridParameter);
    }

    public virtual ObjectResult<getproduct_Result> getproduct()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getproduct_Result>("getproduct");
    }

    public virtual int uploadimage(string name, Nullable<int> size, byte[] imagedata, ObjectParameter newid)
    {
        var nameParameter = name != null ?
            new ObjectParameter("name", name) :
            new ObjectParameter("name", typeof(string));

        var sizeParameter = size.HasValue ?
            new ObjectParameter("size", size) :
            new ObjectParameter("size", typeof(int));

        var imagedataParameter = imagedata != null ?
            new ObjectParameter("imagedata", imagedata) :
            new ObjectParameter("imagedata", typeof(byte[]));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uploadimage", nameParameter, sizeParameter, imagedataParameter, newid);
    }
}
